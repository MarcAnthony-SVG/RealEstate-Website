{"version":3,"sources":["Components/subComponents/forSale.jsx","Components/subComponents/price.jsx","Components/subComponents/bed&Bath.jsx","Components/subComponents/homeType.jsx","Components/subComponents/more.jsx","Components/navigationBar.jsx","Components/mapDisplay.jsx","Components/subComponents/property.jsx","Components/propertyListing.jsx","App.js","serviceWorker.js","index.js"],"names":["ForSale","props","className","Dropdown","DropdownButton","id","title","PriceMin","Item","as","onClick","console","log","value","selectMinPrice","PriceMax","selectMaxPrice","BedAndBath","InputGroup","Prepend","Button","selectMinBath","variant","selectMaxBath","HomeType","selectBuildingTypeId","More","setOpenHouse","NavBar","state","Navbar","bg","expand","Form","onSubmit","this","getPropertiesByCity","inline","FormControl","onChange","inputCityName","NavBarOptions","SearchedCity","type","placeholder","TEST","Toggle","aria-controls","Collapse","Nav","NavDropdown","React","Component","mapDisplay","data","PropertiesData","position","Required","WrappedMap","withScriptjs","withGoogleMap","useState","selectedProperty","setSelectedProperty","defaultZoom","defaultCenter","lat","LatitudeMin","lng","LongitudeMin","map","place","key","Id","parseInt","Property","Address","Latitude","Longitude","icon","url","scaledSize","window","google","maps","Size","onCloseClick","PublicRemarks","style","border","width","height","googleMapURL","process","REACT_APP_GOOGLE_KEY","loadingElement","containerElement","mapElement","item","index","src","Price","Land","SizeTotal","AddressText","PropertyListings","overflow","City","length","setSortBy","App","getRealEstateData","e","axios","method","params","CurrentPage","RecordsPerPage","LatitudeMax","LongitudeMax","BedRange","BathRange","OpenHouse","RentMin","RentMax","NumberOfDays","CultureId","ZoningTypeGroupId","ParkingTypeId","SortBy","ListingOptions","SortOrder","then","result","setState","isLoaded","Results","error","getGeoCords","headers","useQueryString","language","address","response","catch","event","newNavBarOptions","target","setCultureId","newListingOptions","selectMinSQFT","MinSQFT","selectMaxSQFT","MaxSQFT","MinBath","MaxBath","BuildingTypeId","viewState","undefined","connectToServer","bind","fetch","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.17f98a06.chunk.js","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types';\n\nconst ForSale = (props) => {\n    return <div>\n        \n    </div>;\n}\n\nexport default ForSale;","import React from \"react\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nconst ForSale = (props) => {\n  return (\n    <div>\n      <div>Price</div>\n      <br></br>\n      <div className=\"flex-container\">\n        <div className=\"MinPrice\">\n          <Dropdown>\n            <DropdownButton id=\"dropdown-basic-button\" title={props.PriceMin}>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={()=>{console.log(\"Price\", props.PriceMin)}}\n                value=\"Any Price\"\n              >\n                Any Price\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"60,000\"\n              >\n                $60K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"120,000\"\n              >\n                $120K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"180,000\"\n              >\n                $180K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"250,000\"\n              >\n                $250K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"300,000\"\n              >\n                $300K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"400,000\"\n              >\n                $400K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMinPrice}\n                value=\"450,000\"\n              >\n                $450K\n              </Dropdown.Item>\n            </DropdownButton>\n          </Dropdown>\n        </div>\n        <h4> - </h4>\n        <div className=\"MaxPrice\">\n          <Dropdown>\n            <DropdownButton id=\"dropdown-basic-button\" title={props.PriceMax}>\n              $ No Max\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"120,000\"\n              >\n                $120K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"250,000\"\n              >\n                $250K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"350,000\"\n              >\n                $350K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"450,000\"\n              >\n                $450K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"600,000\"\n              >\n                $600K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"700,000\"\n              >\n                $700K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"800,000\"\n              >\n                $800K\n              </Dropdown.Item>\n              <Dropdown.Item\n                as=\"button\"\n                onClick={props.selectMaxPrice}\n                value=\"Any Price\"\n              >\n                Any Price\n              </Dropdown.Item>\n              </DropdownButton>\n          </Dropdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForSale;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputGroup, Button } from \"react-bootstrap\";\n\nconst BedAndBath = (props) => {\n  return (\n    <div>\n      <div>\n        Bedrooms\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <Button\n              onClick={props.selectMinBath}\n              value={\"Any\"}\n              variant=\"primary\"\n            >\n              Any\n            </Button>\n            <Button\n              onClick={props.selectMinBath}\n              value={1}\n              variant=\"outline-secondary\"\n            >\n              1+\n            </Button>\n            <Button\n              onClick={props.selectMinBath}\n              value={2}\n              variant=\"outline-secondary\"\n            >\n              2+\n            </Button>\n            <Button\n              onClick={props.selectMinBath}\n              value={3}\n              variant=\"outline-secondary\"\n            >\n              3+\n            </Button>\n            <Button\n              onClick={props.selectMinBath}\n              value={4}\n              variant=\"outline-secondary\"\n            >\n              4+\n            </Button>\n            <Button\n              onClick={props.selectMinBath}\n              value={5}\n              variant=\"outline-secondary\"\n            >\n              5+\n            </Button>\n          </InputGroup.Prepend>\n        </InputGroup>\n      </div>\n      <div>\n        Bathrooms\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <Button\n              onClick={props.selectMaxBath}\n              value={\"Any\"}\n              variant=\"primary\"\n            >\n              Any\n            </Button>\n            <Button\n              onClick={props.selectMaxBath}\n              value={1}\n              variant=\"outline-secondary\"\n            >\n              1+\n            </Button>\n            <Button\n              onClick={props.selectMaxBath}\n              value={1.5}\n              variant=\"outline-secondary\"\n            >\n              1.5+\n            </Button>\n            <Button\n              onClick={props.selectMaxBath}\n              value={2}\n              variant=\"outline-secondary\"\n            >\n              2+\n            </Button>\n            <Button\n              onClick={props.selectMaxBath}\n              value={3}\n              variant=\"outline-secondary\"\n            >\n              3+\n            </Button>\n            <Button\n              onClick={props.selectMaxBath}\n              value={4}\n              variant=\"outline-secondary\"\n            >\n              4+\n            </Button>\n          </InputGroup.Prepend>\n        </InputGroup>\n        <Button variant=\"outline-secondary\">Done</Button>\n      </div>\n    </div>\n  );\n};\nBedAndBath.propTypes = {\n  selectMinBath: PropTypes.func,\n  selectMaxBath: PropTypes.func,\n};\n\nexport default BedAndBath;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nconst HomeType = (props) => {\n  return (\n    <div>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"0\">\n        No Preference\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"1\">\n        House\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"2\">\n        Duplex\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"3\">\n        Triplex\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"5\">\n        Residential Commercial Mix\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"6\">\n        Mobile Home\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"12\">\n        Special Purpose\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.selectBuildingTypeId} value=\"14\">\n        Other\n      </Dropdown.Item>\n    </div>\n  );\n};\n\nexport default HomeType;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst More = (props) => {\n  return (\n    <div>\n      <Dropdown.Item as=\"button\" onClick={props.setOpenHouse} value=\"true\">\n        View Open Houses\n      </Dropdown.Item>\n      <Dropdown.Item as=\"button\" onClick={props.setOpenHouse} value=\"false\">\n        Hide Open Houses\n      </Dropdown.Item>\n    </div>\n  );\n};\n\nexport default More;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport ForSale from \"./subComponents/forSale\";\nimport Price from \"./subComponents/price\";\nimport BedsAndBath from \"./subComponents/bed&Bath\";\nimport HomeType from \"./subComponents/homeType\";\nimport More from \"./subComponents/more\";\n\nclass NavBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render(props) {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Form onSubmit={this.props.getPropertiesByCity} inline>\n          <FormControl\n            onChange={this.props.inputCityName}\n            value={this.props.NavBarOptions.SearchedCity}\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            TEST={console.log(\"State\", this.state)}\n          />\n          <Button\n            onClick={this.props.getPropertiesByCity}\n            variant=\"outline-success\"\n          >\n            Search\n          </Button>\n        </Form>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"For Sale\" id=\"basic-nav-dropdown\">\n              <ForSale></ForSale>\n            </NavDropdown>\n            <NavDropdown title=\"Price\" id=\"basic-nav-dropdown\">\n              <Price\n                PriceMin={this.props.NavBarOptions.PriceMin}\n                PriceMax={this.props.NavBarOptions.PriceMax}\n                selectMinPrice={this.props.selectMinPrice}\n                selectMaxPrice={this.props.selectMaxPrice}\n              ></Price>\n            </NavDropdown>\n            <NavDropdown title=\"Beds & Bath\" id=\"basic-nav-dropdown\">\n              <BedsAndBath\n                selectMinBath={this.selectMinBath}\n                selectMaxBath={this.selectMaxBath}\n              ></BedsAndBath>\n            </NavDropdown>\n            <NavDropdown title=\"Home Type\" id=\"basic-nav-dropdown\">\n              <HomeType\n                selectBuildingTypeId={this.props.selectBuildingTypeId}\n              ></HomeType>\n            </NavDropdown>\n            <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\n              <More setOpenHouse={this.props.setOpenHouse}></More>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\nNavBar.propTypes = {\n  getPropertiesByCity: PropTypes.func,\n  inputCityName: PropTypes.func,\n  SearchedCity: PropTypes.string,\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\n\nexport default function mapDisplay(props) {\n  let data = props.PropertiesData;\n  let position = props.Required;\n\n  function Map() {\n    const [selectedProperty, setSelectedProperty] = useState(null);\n\n    return (\n      <GoogleMap\n        defaultZoom={4}\n        defaultCenter={{\n          lat: position.LatitudeMin,\n          lng: position.LongitudeMin,\n        }}\n      >\n        {data.map((place) => (\n          <Marker\n            key={place.Id}\n            position={{\n              lat: parseInt(place.Property.Address.Latitude),\n              lng: parseInt(place.Property.Address.Longitude),\n            }}\n            onClick={() => {\n              setSelectedProperty(place);\n            }}\n            icon={{\n              url:\n                \"https://www.pinclipart.com/picdir/big/0-8554_house-png-clip-art-best-web-clipart-inside.png\",\n              scaledSize: new window.google.maps.Size(32, 32),\n            }}\n          />\n        ))}\n\n        {selectedProperty && (\n          <InfoWindow\n            position={{\n              lat: parseInt(selectedProperty.Property.Address.Latitude),\n              lng: parseInt(selectedProperty.Property.Address.Longitude),\n            }}\n            onCloseClick={() => {\n              setSelectedProperty(null);\n            }}\n          >\n            <div>\n              <h2></h2>\n              <p>{selectedProperty.PublicRemarks}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n  }\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  return (\n    <div\n      style={{ border: \"2.4px solid black\", width: \"45vw\", height: \"70.9vh\" }}\n    >\n      <WrappedMap\n        googleMapURL={`\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}\"`}\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../css/PropertyListings.css\";\n\nconst Property = (props) => {\n \n  return (\n    <div className=\"PropertiesContainer\">\n      {props.PropertiesData.map((item, index) => (\n        <div key={index} className=\"Properties\">\n          <img\n            className=\"PropertyImage\"\n            src={`https://www.pinclipart.com/picdir/big/0-8554_house-png-clip-art-best-web-clipart-inside.png`}\n          />\n          <div id=\"Price\">Price: {item.Property.Price}</div>\n          <div id=\"SizeTotal\">Size: {item.Land.SizeTotal}</div>\n          <div id=\"Address\">Address: {item.Property.Address.AddressText}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Property;\n","import React from \"react\";\nimport Property from \"./subComponents/property\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\n// import axios from \"axios\";\nimport \"../css/PropertyListings.css\";\n\nclass PropertyListings extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <div\n        style={{\n          border: \"2.4px solid black\",\n          width: \"45vw\",\n          height: \"70.9vh\",\n          overflow: \"auto\",\n        }}\n      >\n        <div> {this.props.City} Real Estate & Homes For Sale</div>\n        <div>{this.props.PropertiesData.length} results</div>\n        <Dropdown>\n          <DropdownButton id=\"dropdown-basic-button\" title=\"Sort By\">\n            <Dropdown.Item as=\"button\" onClick={this.props.setSortBy} value=\"1\">\n              Price\n            </Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={this.props.setSortBy} value=\"6\">\n              Date\n            </Dropdown.Item>\n            <Dropdown.Item\n              as=\"button\"\n              onClick={this.props.setSortBy}\n              value=\"11\"\n            >\n              Virtual Tour\n            </Dropdown.Item>\n            <Dropdown.Item\n              as=\"button\"\n              onClick={this.props.setSortBy}\n              value=\"12\"\n            >\n              Open Houses\n            </Dropdown.Item>\n            <Dropdown.Item\n              as=\"button\"\n              onClick={this.props.setSortBy}\n              value=\"13\"\n            >\n              More Photos\n            </Dropdown.Item>\n          </DropdownButton>\n        </Dropdown>\n        <Property\n          PropertiesData={this.props.PropertiesData}\n          onClick={console.log(\n            \"propertyListings > onClick\",\n            this.props.PropertiesData\n          )}\n        ></Property>\n      </div>\n    );\n  }\n}\n\nexport default PropertyListings;\n","import React, { Component } from \"react\";\nimport NavBar from \"./Components/navigationBar\";\nimport \"./css/App.css\";\nimport MapDisplay from \"./Components/mapDisplay\";\nimport axios from \"axios\";\nimport PropertyListings from \"./Components/propertyListing\";\n// import DummyData from \"./Data/Data\";\n\n\n// import Navbar from \"./Components/Layout/Navbar\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import Footer from \"./Components/Layout/Footer\";\n// import Home from \"./Components/Layout/Home\";\n// import Social from \"./Components/social/Social\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      PropertiesData: [], // When complete replace with [] and unhide componentDidMount\n      City: \"\",\n      address: \"\",\n      Required: {\n        CurrentPage: \"1\", //REQUIRED\n        LatitudeMin: 52.1304, // REQUIRED\n        LatitudeMax: 51.21389, // REQUIRED\n        LongitudeMax: -10.267941690981388, // REQUIRED\n        LongitudeMin: -102.462776,\n        RecordsPerPage: \"10\", // REQUIRED Number items returned per request, max 50\n      },\n      NavBarOptions: {\n        SearchedCity: \"\",\n        PriceMin: 0 || \"Min Price\", // Filter by min price, applied when TransactionTypeId = 2\n        PriceMax: 0 || \"Max Price\", //Filter by max price, applied when TransactionTypeId = 2\n        BedRange: \"0-0:Any\", //0-0:Any|1-1:1|1-0:1+|2-2:2|2-0:2+|3-3:3|3-0:3+|4-4:4|4-0:4+|5-5:5|5-0:5+\n        BathRange: \"0-0:Any\", //0-0:Any|1-1:1|1-0:1+|2-2:2|2-0:2+|3-3:3|3-0:3+|4-4:4|4-0:4+|5-5:5|5-0:5+\n        BuildingTypeId: 0, //0-No Preference|1-House|2-Duplex|3-Triplex|5-Residential Commercial Mix|6-Mobile Home|12-Special Purpose|14-Other|16-Row / Townhouse|17-Apartment|19-Fourplex|20-Garden Home|26-Modular|27-Manufactured Home/Mobile|28-Commercial Apartment|29-Manufactured Home\n        // OpenHouse: Boolean,\n        RentMin: 0, // Filter by min price, applied when TransactionTypeId = 3\n        RentMax: 0, // Filter by max price, applied when TransactionTypeId = 3\n        NumberOfDays: 0, //Listed since\n        CultureId: 1 || 2, // 1 - English|2 - French\n        ZoningTypeGroupId: undefined, // 1-Agricultural|2-Commercial Mixed|3-Commercial Office|4-Commercial Retail|5-Industrial|6-Industrial-Heavy|7-Industrial-Light|8-Industrial-Medium|9-Institutional|10-Other|11-Recreational|12-Residential-High Density|13-Residential-Low Density|14-Residential - Medium Density\n        ParkingTypeId: undefined, // 1-Attached garage|2-Integrated garage|3-Detached garage|4-Garage|5-Carport|6-Underground|7-Indoor|8-Open|9-Covered|10-Parking pad|11-Paved Yard|35-Boat House|36-Concrete|37-Heated Garage\n      },\n      ListingOptions: {\n        SortBy: 1, // 1-Price($)|6-Date|11-Virtual Tour|12-Open Houses|13-More Photos\n        SortOrder: \"A\", //A - ascending | D - descending\n      },\n    };\n    this.connectToServer = this.connectToServer.bind(this);\n\n    this.inputCityName = this.inputCityName.bind(this);\n    this.setOpenHouse = this.setOpenHouse.bind(this);\n    this.setCultureId = this.setCultureId.bind(this);\n    this.setSortBy = this.setSortBy.bind(this);\n    this.selectMinPrice = this.selectMinPrice.bind(this);\n    this.selectMaxPrice = this.selectMaxPrice.bind(this);\n    this.getPropertiesByCity = this.getPropertiesByCity.bind(this);\n    this.selectBuildingTypeId = this.selectBuildingTypeId.bind(this);\n    this.viewState = this.viewState.bind(this);\n    this.getRealEstateData = this.getRealEstateData.bind(this);\n  }\n  connectToServer() {\n    fetch(\"/\");\n  }\n  componentDidMount() {\n    this.connectToServer();\n  }\n  getRealEstateData = (e) => {\n    axios({\n      method: \"GET\",\n      url: \"http://localhost:3006/api/properties/list-for-sale\",\n      params: {\n        CurrentPage: \"1\", //REQUIRED\n        RecordsPerPage: \"10\", // REQUIRED Number items returned per request, max 50\n        LatitudeMin: \"-22.26872153207163\", // REQUIRED\n        LatitudeMax: \"81.14747595814636\", // REQUIRED\n        LongitudeMax: \"-10.267941690981388\", // REQUIRED\n        LongitudeMin: \"-136.83037765324116\", //REQUIRED\n        BedRange: this.state.NavBarOptions.BedRange, //0-0:Any|1-1:1|1-0:1+|2-2:2|2-0:2+|3-3:3|3-0:3+|4-4:4|4-0:4+|5-5:5|5-0:5+\n        BathRange: this.state.NavBarOptions.BathRange, //0-0:Any|1-1:1|1-0:1+|2-2:2|2-0:2+|3-3:3|3-0:3+|4-4:4|4-0:4+|5-5:5|5-0:5+\n        OpenHouse: this.state.NavBarOptions.OpenHouse,\n        PriceMin: this.state.NavBarOptions.PriceMin, // Filter by min price, applied when TransactionTypeId = 2\n        PriceMax: this.state.NavBarOptions.PriceMax, //Filter by max price, applied when TransactionTypeId = 2\n        RentMin: this.state.NavBarOptions.RentMin, // Filter by min price, applied when TransactionTypeId = 3\n        RentMax: this.state.NavBarOptions.RentMax, // Filter by max price, applied when TransactionTypeId = 3\n        NumberOfDays: this.state.NavBarOptions.NumberOfDays, //Listed since\n        CultureId: this.state.NavBarOptions.CultureId, // 1 - English|2 - French\n        ZoningTypeGroupId: this.state.NavBarOptions.ZoningTypeGroupId, // 1-Agricultural|2-Commercial Mixed|3-Commercial Office|4-Commercial Retail|5-Industrial|6-Industrial-Heavy|7-Industrial-Light|8-Industrial-Medium|9-Institutional|10-Other|11-Recreational|12-Residential-High Density|13-Residential-Low Density|14-Residential - Medium Density\n        ParkingTypeId: this.state.NavBarOptions.ParkingTypeId, // 1-Attached garage|2-Integrated garage|3-Detached garage|4-Garage|5-Carport|6-Underground|7-Indoor|8-Open|9-Covered|10-Parking pad|11-Paved Yard|35-Boat House|36-Concrete|37-Heated Garage\n        SortBy: this.state.ListingOptions.SortBy, // 1-Price($)|6-Date|11-Virtual Tour|12-Open Houses|13-More Photos\n        SortOrder: this.state.ListingOptions.SortOrder, //A - ascending | D - descending\n      },\n    }).then(\n      (result) => {\n        console.log(\"App > cDM\", result);\n        this.setState({\n          isLoaded: true,\n          PropertiesData: result.data.Results,\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }\n    );\n  };\n\n  getGeoCords = (e) => {\n    axios({\n      method: \"GET\",\n      url: \"https://google-maps-geocoding.p.rapidapi.com/geocode/json\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"76aed66272msh476cab0c52be894p1c453bjsna5695f5802e3\",\n        useQueryString: true,\n      },\n      params: {\n        language: \"en\",\n        address: this.state.address,\n      },\n    })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  inputCityName = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.SearchedCity = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n  };\n  setOpenHouse = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.OpenHouse = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n\n  setCultureId = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.CultureId = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n  };\n\n  setSortBy = (event) => {\n    let newListingOptions = { ...this.state.ListingOptions };\n    newListingOptions.SortBy = event.target.value;\n    this.setState({ ListingOptions: newListingOptions });\n    this.getRealEstateData();\n  };\n  selectMinPrice = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.PriceMin = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectMaxPrice = (event) => {\n    //Complete\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.PriceMax = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectMinSQFT = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.MinSQFT = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectMaxSQFT = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.MaxSQFT = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectMinBath = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.MinBath = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectMaxBath = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.MaxBath = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  selectBuildingTypeId = (event) => {\n    let newNavBarOptions = { ...this.state.NavBarOptions };\n    newNavBarOptions.BuildingTypeId = event.target.value;\n    this.setState({ NavBarOptions: newNavBarOptions });\n    this.getRealEstateData();\n  };\n  getPropertiesByCity = (event) => {\n    this.setState({ address: this.state.NavBarOptions.SearchedCity });\n    this.getGeoCords();\n    // this.getRealEstateData();\n  };\n\n  viewState = () => {\n    console.log(\"ViewState\", this.state);\n  };\n\n  // componentDidMount() {\n  //   axios.get(`http://localhost:3005/api/properties/list-for-sale`).then(\n  //     (result) => {\n  //       console.log(\"App > cDM\",result);\n  //       this.setState({\n  //         isLoaded: true,\n  //         PropertiesData: result.data.Results,\n  //       });\n  //     },\n  //     (error) => {\n  //       this.setState({\n  //         isLoaded: true,\n  //         error,\n  //       });\n  //     }\n  //   );\n  // }\n  render() {\n    // const { error, isLoaded, PropertiesData } = this.state;\n    // if (error) {\n    //   return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //   return <div>Loading...</div>;\n    // } else {\n    return (\n      //  <Router>\n      //   <div className=\"container\">\n      //     <Navbar /> <Route exact path=\"/\" component={Home} />\n      //     <Route exact path=\"/social\" component={Social} /> <Footer />\n      //   </div>\n      // </Router>\n      <div>\n        <NavBar\n          NavBarOptions={this.state.NavBarOptions}\n          inputCityName={this.inputCityName}\n          selectMinPrice={this.selectMinPrice}\n          selectMaxPrice={this.selectMaxPrice}\n          getPropertiesByCity={this.getPropertiesByCity}\n          selectBuildingTypeId={this.selectBuildingTypeId}\n          setOpenHouse={this.setOpenHouse}\n        ></NavBar>\n        <div className=\"flex-container\">\n          <MapDisplay\n            Required={this.state.Required}\n            PropertiesData={this.state.PropertiesData}\n          ></MapDisplay>\n          <PropertyListings\n            City={this.state.City}\n            setSortBy={this.setSortBy}\n            PropertiesData={this.state.PropertiesData}\n          ></PropertyListings>\n        </div>\n        <button onClick={this.viewState}>View State</button>\n        <button onClick={this.getRealEstateData}>Get Data</button>\n      </div>\n    );\n  }\n}\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}